<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="51" passed="51">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="4030" started-at="2017-11-28T16:08:45Z" finished-at="2017-11-28T16:08:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="4030" started-at="2017-11-28T16:08:45Z" finished-at="2017-11-28T16:08:49Z">
      <class name="de.letsbulidacompiler.compiler.CompilerTest">
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="13" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsConstantAlreadyDefinedException_whenDefiningAlreadyDefinedConstant()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsConstantAlreadyDefinedException_whenDefiningAlreadyDefinedConstant" duration-ms="119" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.ConstantAlreadyDefinedException">
            <message>
              <![CDATA[2:0 constant already defined: <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.ConstantAlreadyDefinedException: 2:0 constant already defined: <x>
	at de.letsbuildacompiler.compiler.MyVisitor.visitConstDeclaration(MyVisitor.java:367)
	at de.letsbuildacompiler.compiler.MyVisitor.visitConstDeclaration(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ConstDeclarationContext.accept(DemoParser.java:1169)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitBlockConstDeclaration(DemoBaseVisitor.java:160)
	at de.letsbuildacompiler.parser.DemoParser$BlockConstDeclarationContext.accept(DemoParser.java:1076)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:436)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:34)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsConstantAlreadyDefinedException_whenDefiningAlreadyDefinedConstant(CompilerTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.ConstantAlreadyDefinedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsConstantAlreadyDefinedException_whenDefiningAlreadyDefinedConstant -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsFunctionAlreadyDefinedException_whenDefiningFunctionTwice()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsFunctionAlreadyDefinedException_whenDefiningFunctionTwice" duration-ms="5" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.FunctionAlreadyDefinedException">
            <message>
              <![CDATA[3:9 function already defined: <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.FunctionAlreadyDefinedException: 3:9 function already defined: <x>
	at de.letsbuildacompiler.compiler.FunctionDefinitionFinder$1.visitFunctionDefinition(FunctionDefinitionFinder.java:23)
	at de.letsbuildacompiler.compiler.FunctionDefinitionFinder$1.visitFunctionDefinition(FunctionDefinitionFinder.java:1)
	at de.letsbuildacompiler.parser.DemoParser$FunctionDefinitionContext.accept(DemoParser.java:1353)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitProgram(DemoBaseVisitor.java:20)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.FunctionDefinitionFinder.findFunctions(FunctionDefinitionFinder.java:28)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:33)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsFunctionAlreadyDefinedException_whenDefiningFunctionTwice(CompilerTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.FunctionAlreadyDefinedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsFunctionAlreadyDefinedException_whenDefiningFunctionTwice -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable" duration-ms="2" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException">
            <message>
              <![CDATA[1:32 undeclared variable <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException: 1:32 undeclared variable <x>
	at de.letsbuildacompiler.compiler.MyVisitor.requireVariableorConstantIndex(MyVisitor.java:505)
	at de.letsbuildacompiler.compiler.MyVisitor.visitVariable(MyVisitor.java:173)
	at de.letsbuildacompiler.compiler.MyVisitor.visitVariable(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$VariableContext.accept(DemoParser.java:666)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitWriteln(MyVisitor.java:65)
	at de.letsbuildacompiler.compiler.MyVisitor.visitWriteln(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$WritelnContext.accept(DemoParser.java:1253)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitStatement(DemoBaseVisitor.java:34)
	at de.letsbuildacompiler.parser.DemoParser$StatementContext.accept(DemoParser.java:287)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitMainStatement(DemoBaseVisitor.java:27)
	at de.letsbuildacompiler.parser.DemoParser$MainStatementContext.accept(DemoParser.java:222)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:469)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:34)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable(CompilerTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsUndeclaredVariableException_ifReadingUndefinedVariable -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsUndeclaredVariableException_ifWrintingUndefinedVariable()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsUndeclaredVariableException_ifWrintingUndefinedVariable" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException">
            <message>
              <![CDATA[1:24 undeclared variable <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException: 1:24 undeclared variable <x>
	at de.letsbuildacompiler.compiler.MyVisitor.requireVariableorConstantIndex(MyVisitor.java:505)
	at de.letsbuildacompiler.compiler.MyVisitor.visitAssignment(MyVisitor.java:380)
	at de.letsbuildacompiler.compiler.MyVisitor.visitAssignment(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$AssignmentContext.accept(DemoParser.java:1212)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitStatement(DemoBaseVisitor.java:34)
	at de.letsbuildacompiler.parser.DemoParser$StatementContext.accept(DemoParser.java:287)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitMainStatement(DemoBaseVisitor.java:27)
	at de.letsbuildacompiler.parser.DemoParser$MainStatementContext.accept(DemoParser.java:222)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:469)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:34)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsUndeclaredVariableException_ifWrintingUndefinedVariable(CompilerTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.UndeclaredVariableOrConstantException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsUndeclaredVariableException_ifWrintingUndefinedVariable -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsUndefinedFunctionException_whenCallingUndefinedFunction()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsUndefinedFunctionException_whenCallingUndefinedFunction" duration-ms="2" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.UndefinedFunctionException">
            <message>
              <![CDATA[1:32 call to undefined function: <someUndefinedFunction>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.UndefinedFunctionException: 1:32 call to undefined function: <someUndefinedFunction>
	at de.letsbuildacompiler.compiler.MyVisitor.visitFunctionCall(MyVisitor.java:269)
	at de.letsbuildacompiler.compiler.MyVisitor.visitFunctionCall(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$FunctionCallContext.accept(DemoParser.java:1558)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitFuncCallExpression(DemoBaseVisitor.java:146)
	at de.letsbuildacompiler.parser.DemoParser$FuncCallExpressionContext.accept(DemoParser.java:804)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitWriteln(MyVisitor.java:65)
	at de.letsbuildacompiler.compiler.MyVisitor.visitWriteln(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$WritelnContext.accept(DemoParser.java:1253)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitStatement(DemoBaseVisitor.java:34)
	at de.letsbuildacompiler.parser.DemoParser$StatementContext.accept(DemoParser.java:287)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitMainStatement(DemoBaseVisitor.java:27)
	at de.letsbuildacompiler.parser.DemoParser$MainStatementContext.accept(DemoParser.java:222)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:469)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:34)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsUndefinedFunctionException_whenCallingUndefinedFunction(CompilerTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.UndefinedFunctionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsUndefinedFunctionException_whenCallingUndefinedFunction -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable" duration-ms="2" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <exception class="de.letsbulidacompiler.compiler.exceptions.VariableAlreadyDefinedException">
            <message>
              <![CDATA[2:0 variable already defined: <x>]]>
            </message>
            <full-stacktrace>
              <![CDATA[de.letsbulidacompiler.compiler.exceptions.VariableAlreadyDefinedException: 2:0 variable already defined: <x>
	at de.letsbuildacompiler.compiler.MyVisitor.visitVarDeclaration(MyVisitor.java:357)
	at de.letsbuildacompiler.compiler.MyVisitor.visitVarDeclaration(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$VarDeclarationContext.accept(DemoParser.java:1128)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visitChildren(AbstractParseTreeVisitor.java:46)
	at de.letsbuildacompiler.parser.DemoBaseVisitor.visitBlockVarDeclaration(DemoBaseVisitor.java:153)
	at de.letsbuildacompiler.parser.DemoParser$BlockVarDeclarationContext.accept(DemoParser.java:1020)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:446)
	at de.letsbuildacompiler.compiler.MyVisitor.visitProgram(MyVisitor.java:1)
	at de.letsbuildacompiler.parser.DemoParser$ProgramContext.accept(DemoParser.java:130)
	at org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)
	at de.letsbuildacompiler.compiler.Main.compile(Main.java:34)
	at de.letsbulidacompiler.compiler.CompilerTest.compileAndRun(CompilerTest.java:274)
	at de.letsbulidacompiler.compiler.CompilerTest.compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable(CompilerTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- de.letsbulidacompiler.compiler.exceptions.VariableAlreadyDefinedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compilingCode_throwsVariableAlreadyDefinedException_whenDefiningAlreadyDefinedVariable -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="205" started-at="2017-11-28T14:08:45Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[plus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program Plus; BEGIN writeln(1+2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="115" started-at="2017-11-28T14:08:45Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chained plus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program chainedPlus; BEGIN writeln(1+2+42); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="136" started-at="2017-11-28T14:08:45Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[multiple statements]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1); writeln(2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
2
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="108" started-at="2017-11-28T14:08:45Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[minus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program minus; BEGIN writeln(3-2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:45Z" finished-at="2017-11-28T14:08:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="78" started-at="2017-11-28T14:08:45Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[times]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program times; BEGIN writeln(2*3); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="91" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[divide]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program divide; BEGIN writeln(6/2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[divide and truncate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program divideAndTruncate; BEGIN writeln(7/2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="67" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[precedence times and divide]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program timesAndDivide; BEGIN writeln(8/2*4); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="58" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[precedence plus and times]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program plusAndTimes; BEGIN writeln(2+3*3); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="69" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[precedence minus and times]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program minusAndTimes; BEGIN writeln(9-2*3); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="61" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[precedence minus and plus]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program minusAndPlus; BEGIN writeln(8-2+5); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="71" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int variable]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program intVariable; VAR foo: int; BEGIN foo = 42; writeln(foo); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="4" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="61" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[add var and constant parameter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program addVarAndConstantParameter; VAR foo: int; BEGIN foo = 42; writeln(foo+2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[44
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="70" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[add two vars parameter]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program addTwoVarsParameter; VAR a: int; b: int; BEGIN a = 2; b = 5; writeln(a+b); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="62" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[return only function]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program returnOnlyFunction; function randomNumber(): int; BEGIN return 4; END; BEGIN writeln(randomNumber()); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="65" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[function/simple_function]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program simpleFunction;
function randomNumber(): int; 
VAR
i: int;
BEGIN
  i = 4;
  return i;
END;

BEGIN 
	writeln(randomNumber());
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="67" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[function/int_parameters]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program intParameters;

function add(a: int, b: int): int;
BEGIN
  return a+b;
END;
	
BEGIN 
	writeln(add(5,8));
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[13
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="72" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[branch/if_int_false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program ifIntFalse;
BEGIN 
	if (0) then 
	  BEGIN
	  writeln(81);
	  END
	else 
	  BEGIN
	  writeln(42);
	  END;
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:46Z" finished-at="2017-11-28T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="62" started-at="2017-11-28T14:08:46Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[branch/if_int_true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program ifIntTrue;
BEGIN 
	if (1) then 
	  BEGIN
	  writeln(81);
	  END
	else
	  BEGIN
	  writeln(42);
	  END;
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[81
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lower than true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1 < 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="59" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lower than false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(2 < 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="72" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lower than or equal true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(2 <= 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="2" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[lower than or equal false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(3 <= 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="89" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[greater than true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(3 > 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="110" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[greater than false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(2 > 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="4" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="141" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[greater than or equal true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(2 >= 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="116" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[greater than or equal false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1 >= 2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="106" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[and true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1 && 1); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="96" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[and left false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(0 && 1); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:47Z" finished-at="2017-11-28T14:08:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:47Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[and right false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1 && 0); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="69" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[or false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(0 || 0); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="71" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[or left true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(1 || 0); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="75" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[or right true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN writeln(0 || 1); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="82" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[operators/and-skip-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler;
function x(i: int): int;
BEGIN
	writeln(i);
	return i;
END;
	
BEGIN 	
	writeln(x(0) && x(0));
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0
0
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="77" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[operators/or-skip-right]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler;

function x(i: int): int;
BEGIN
	writeln(i);
	return i;
END;
	
BEGIN 	
	writeln(x(1) || x(0));
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1
1
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[write]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN write(42); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="94" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[write string literal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program compiler; BEGIN write("hello world"); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hello world]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="3" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="94" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[conditionalStructures/whileStatementLess]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program whileStatementLess;
VAR
	x: int;
BEGIN	
	x = 0;
	while x<10 do
	BEGIN 
		x = x + 1; 
	END;
	writeln(x);
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="70" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[conditionalStructures/whileStatementLessEqual]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program whileStatementLessEqual;
VAR
	x: int;
BEGIN	
	x = 0;
	while x<=10 do
	BEGIN 
		x = x + 1; 
	END;
	writeln(x);
END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="71" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[int constante]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program intConstant; CONST bla = 42; BEGIN writeln(bla); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="67" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[add const]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program addConstant; CONST foo = 42; BEGIN writeln(foo+2); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[44
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="60" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[add two consts]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program addTwoConstants; CONST a = 2; b = 5; BEGIN writeln(a+b); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:48Z" finished-at="2017-11-28T14:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="103" started-at="2017-11-28T14:08:48Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[first comment]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program fisrtComment; {1º Comentario} VAR foo: int; BEGIN foo = 42; writeln(foo); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:49Z" finished-at="2017-11-28T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:49Z" finished-at="2017-11-28T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="65" started-at="2017-11-28T14:08:49Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[second comment]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program secondComment; VAR foo: int; {Second Comentario} BEGIN foo = 42; writeln(foo); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:49Z" finished-at="2017-11-28T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
        <test-method status="PASS" signature="runningCode_outputExpectedText(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="runningCode_outputExpectedText" duration-ms="68" started-at="2017-11-28T14:08:49Z" data-provider="provide_code_expectedText" finished-at="2017-11-28T14:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[third comment]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[program thirdComment; VAR foo: int; BEGIN foo = 42; {Third 
 Comentário} writeln(foo); END.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[42
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runningCode_outputExpectedText -->
        <test-method status="PASS" signature="creatTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="creatTempDir" is-config="true" duration-ms="0" started-at="2017-11-28T14:08:49Z" finished-at="2017-11-28T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatTempDir -->
        <test-method status="PASS" signature="deleteTempDir()[pri:0, instance:de.letsbulidacompiler.compiler.CompilerTest@4f933fd1]" name="deleteTempDir" is-config="true" duration-ms="1" started-at="2017-11-28T14:08:49Z" finished-at="2017-11-28T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteTempDir -->
      </class> <!-- de.letsbulidacompiler.compiler.CompilerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
